/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: TRIMGALORE {
        ext.args = [
            '--fastqc',
            params.trim_nextseq > 0 ? "--nextseq ${params.trim_nextseq}" : ''
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/trimgalore/fastqc" },
                mode: 'copy',
                pattern: "*.{html,zip}"
            ],
            [
                path: { "${params.outdir}/trimgalore" },
                mode: 'copy',
                pattern: "*.txt"
            ]
        ]
    }

    withName: FIRST_CAT {
        publishDir = [
            enabled: false
        ]
    }

    withName: SECOND_CAT {
        publishDir = [
            path: { "${params.outdir}/concatenate" },
            mode: 'copy',
            pattern: '*.gz'
        ]
    }

    withName: 'GENOMEINDEX' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'SAMPLES_SKETCH' {
        ext.args = 'dna --param-string "k=21"'
    }

    withName: 'GENOMES_SKETCH' {
        ext.args = 'dna --param-string "k=21"'
    }

    withName: 'SOURMASH_GATHER' {
        ext.args = '--threshold-bp "50"'
    }

    withName: 'GINDEX_CAT' {
        publishDir = [
            path: { "${params.outdir}/concatenate" },
            mode: 'copy',
            pattern: '*.gz'
        ]
    }

    withName: BBMAP_ALIGN {
        ext.args = "trimreaddescriptions=t pigz=t"
        publishDir = [
            [
                path: { "${params.outdir}/bbmap/bam" },
                mode: 'copy',
                pattern: "*.bam",
                enabled: params.save_bam
            ],
            [
                path: { "${params.outdir}/bbmap/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: '.*:FEATURECOUNTS' {
        ext.args = '-g ID -t CDS -F gtf'
        publishDir = [
            path: { "${params.outdir}/featurecounts" },
            mode: 'copy',
            pattern: "*.featureCounts.*"
        ]
    }

    withName: COLLECT_FEATURECOUNTS {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy'
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: ARIA2 {
        publishDir = [
            path: { "${params.outdir}/CheckM/checkm_downloads" },
            mode: params.publish_dir_mode,
            overwrite: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_checkm_data
        ]
    }

    withName: UNTAR {
        storeDir = { "${params.checkm_db}" }
        ext.prefix = { "${meta.id}_untar" }
        publishDir = [
            path: { "${params.outdir}/CheckM/checkm_downloads" },
            mode: params.publish_dir_mode,
            overwrite: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_checkm_data
        ]
    }

    withName: 'CHECKM_LINEAGEWF' {
        tag = { "${meta.id}" }
        ext.prefix = { "${meta.id}_wf" }
        publishDir = [
            path: { "${params.outdir}/CheckM/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CHECKM_QA' {
        ext.prefix = { "${meta.id}_qa" }
        ext.args = "-o 2 --tab_table"
        publishDir = [
            path: { "${params.outdir}/CheckM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'COMBINE_CHECKM_TSV' {
        ext.prefix = { "checkm_summary" }
        publishDir = [
            path: { "${params.outdir}/CheckM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GTDBTK_CLASSIFYWF {
        ext.args   = "--extension fa"
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: { "${params.outdir}/Taxonomy/GTDB-Tk/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.{log,tasv,tree.gz,fasta,fasta.gz}"
        ]
    }

    withName: GTDBTK_SUMMARY {
        ext.args   = "--extension fa"
        publishDir = [
            path: { "${params.outdir}/Taxonomy/GTDB-Tk" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: COLLECT_STATS {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy'

        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
